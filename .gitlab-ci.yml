variables:
  IMAGE_SERVER_NAME: gitlab-server-image
  IMAGE_SERVER_TAG: gitlab-server-image
  IMAGE_CLIENT_NAME: gitlab-client-image
  IMAGE_CLIENT_TAG: gitlab-client-image

stages:
  # - test
  - login
  - build

# run-frontend-tests:
#   image: node:15
#   stage: test
#   before_script:
#     - cd views/React
#     - rm -rf node_modules
#     - rm -rf package-lock.json
#     - npm install
#   script:
#     - npm test

# run-backend-tests:
#   image: node:15
#   stage: test
#   before_script:
#     - cd server
#     - cp "$TESTING_ENV_FILE" .env
#     - rm -rf node_modules
#     - rm -rf package-lock.json
#     - npm install
#   script:
#     - npm test

login-docker:
  image: docker
  stage: login
  script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS

build-server-image:
  image: docker
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - apk add --no-cache git
    - cd server
  script:
    - docker build -t $IMAGE_SERVER_NAME:$IMAGE_SERVER_TAG .
    - docker push $IMAGE_SERVER_NAME

build-client-image:
  image: docker
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - apk add --no-cache git
    - cd views/React
  script:
    - docker build -t $IMAGE_CLIENT_NAME:$IMAGE_CLIENT_TAG .
    - docker push $IMAGE_CLIENT_TAG